buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'maven'
apply plugin: 'signing'

version = "1.2.0"
def ENV = System.getenv()
if (ENV.DRONE_BUILD_NUMBER) {
    version += ".n" + ENV.DRONE_BUILD_NUMBER
}
version += "-SNAPSHOT"

group= "com.github.mcjty" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "mcjtylib"

minecraft {
    version = "1.7.10-10.13.3.1395-1710ls"
    assetDir = "eclipse/assets"
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'dev'
}

artifacts {
    archives sourceJar
    archives deobfJar
}

//signing {
//    sign configuration.archives
//}

repositories {
    maven { // The repo from which to get waila
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven { // the repo from which to get NEI and stuff 
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven {
        name 'OC Repo'
        url "http://maven.cil.li/"
    }
    // maven {
        // name = "forestry"
        // url = "http://maven.ic2.player.to/"
    // }
    // maven { // ttCore
        // name 'tterrag Repo'
        // url "http://maven.tterrag.com"
    // }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    compile "mcp.mobius.waila:Waila:1.5.10_1.7.10"
    // compile "com.enderio:EnderIO:1.7.10-2.2.7.331"
    compile "li.cil.oc:OpenComputers:MC1.7.10-1.4.+:api"

    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.136:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.6.43:dev"
    compile "codechicken:ForgeMultipart:1.7.10-1.1.2.331:dev"

//    compile "net.sengir.forestry:forestry_1.7.10-3.5.6.15:dev"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'nei_at.cfg'
    }
}

uploadArchives() {
    dependsOn reobf

        repositories {
            logger.info('Publishing to files server')

            mavenDeployer {
                repository(url: 'https://oss.sonatype.org/service/local/staging/deploy/maven2') {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }
                snapshotRepository(url: 'https://oss.sonatype.org/content/repositories/snapshots') {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                addFilter('dev') {artifact, file ->
                    artifact.attributes['classifier'] == 'dev'
                }
                addFilter('sources') {artifact, file ->
                    artifact.attributes['classifier'] == 'sources'
                }

                pom {
                    groupId = project.group
                    version = project.version
                    artifactId = project.archivesBaseName
                    project {
                        name project.archivesBaseName
                        packaging 'jar'
                        description 'Common library for McJty mods (RFTools, Deep Resonance)'
                        url 'https://github.com/McJty/McJtyLib'

                        scm {
                            url 'scm:git:git@github.com:McJty/McJtyLib.git'
                            connection 'scm:git:git@github.com:McJty/McJtyLib.git'
                            developerConnection 'scm:git:git@github.com:McJty/McJtyLib.git'
                        }

                        issueManagement {
                            system 'github'
                            url 'https://github.com/McJty/McJtyLib/issues'
                        }

                        developers {
                            developer {
                                id 'McJty'
                                name 'McJty'
                                roles { role 'developer' }
                            }
                        }
                    }
                }
            }
        }
    }
